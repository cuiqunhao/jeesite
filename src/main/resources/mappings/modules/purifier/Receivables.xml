<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.purifier.dao.ReceivablesDao">

    <sql id="receivablesCol">
        a.id as id,
        c.id as "contract.id",
        c.contractNo as "contract.contractNo",
        b.name as "userId.name",
        b.id as "userId.id",
        a.invoice as invoice,
        a.amount as amount,
        a.next_rec_time as nextRecTime,
        a.rec_time as recTime,
        a.remarks as remarks,
        a.is_invoice as isInvoice
    </sql>

    <sql id="receivablesJoin">
        inner join sys_user b on b.id = a.user_id
        inner JOIN purifier_contract c on c.id = a.contractId
        inner JOIN sys_office o ON o.id = b.office_id
    </sql>

    <sql id="whereCon">
        <where>
            a.del_flag ='0'
            <if test="contract != null and contract.contractNo != null and contract.contractNo != ''">AND c.contractNo LIKE  '%${contract.contractNo}%'</if>
            <if test="contract != null and contract.id != null and contract.id != ''">AND a.contractId =  #{contract.id}</if>
        </where>
    </sql>

    <select id="get" resultType="Receivables">
        SELECT
        <include refid="receivablesCol"/>
        FROM purifier_receivables a
        <include refid="receivablesJoin"/>
        where a.id = #{id}
    </select>

    <select id="findList" resultType="Receivables">
        SELECT
        <include refid="receivablesCol"/>
        FROM purifier_receivables a
        <include refid="receivablesJoin"/>
        <include refid="whereCon"/>
        ${sqlMap.dsf}
    </select>


    <insert id="insert">
        Insert INTO purifier_receivables(
        contractId,
        rec_time,
        next_rec_time,
        user_id,
        amount,
        invoice,
        create_by,
        create_date,
        del_flag,
        remarks,
        is_invoice
        )
        VALUES (
        #{contract.id},
        #{recTime},
        #{nextRecTime},
        #{userId.id},
        #{amount},
        #{invoice},
        #{createBy.id},
        #{createDate},
        '0',
        #{remarks},
        #{isInvoice}
        )
    </insert>

    <update id="update">
        UPDATE purifier_receivables a SET
        a.update_by = #{updateBy.id},
        <if test="recTime != null and recTime != ''">a.rec_time=#{recTime},</if>
        <if test="nextRecTime != null and nextRecTime != ''">a.next_rec_time=#{nextRecTime},</if>
        <if test="userId != null and userId.id != null and userId.id != ''">a.user_id=#{userId.id},</if>
        <if test="invoice != null and invoice != ''">a.invoice=#{invoice},</if>
        <if test="amount != null and amount != ''">a.amount=#{amount},</if>
        <if test="isInvoice != null and isInvoice != ''">a.is_invoice=#{isInvoice},</if>
        <if test="remarks != null and remarks != ''">a.remarks=#{remarks},</if>
        <if test="contract != null and contract.id != null and contract.id != ''">a.contractId=#{contract.id},</if>
        a.update_date = #{updateDate}
        where a.id=#{id}
    </update>

    <delete id="delete">
        UPDATE purifier_receivables SET
        update_by = #{updateBy.id},
        del_flag = '1',
        update_date = #{updateDate}
        where id=#{id}
    </delete>

    <delete id="deleteOtherRec">
        UPDATE purifier_receivables SET
        update_by = #{updateBy.id},
        del_flag = '1',
        update_date = #{updateDate}
        where contractId=#{contract.id}
    </delete>
    

</mapper>