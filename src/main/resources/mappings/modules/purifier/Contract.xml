<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.purifier.dao.ContractDao">

    <sql id="contractCol">
        a.id as id,
        a.contractNo as contractNo,
        a.contract_name as contractName,
        a.contract_type as contractType,
        a.contract_amount as contractAmount,
        a.contract_bengin_time as contractBenginTime,
        a.contract_end_time as contractEndTime,
        a.contacts as contacts,
        a.contacts_phone as contactsPhone,
        b.id as "salesman.id",
        b.name as "salesman.name",
        a.item as item,
        a.contacts_address as contactsAddress,
        a.contract_time as contractTime,
        a.complete_time as completeTime,
        c.id as "installer.id",
        c.name as "installer.name",
        a.mian_cycle as mianCycle,
        a.coll_cycle as collCycle,
         a.create_by as createBy,
        a.create_date as createDate,
        a.update_by as updateBy,
        a.update_date as updateDate,
        a.remarks as remarks,
        a.del_flag as delFlag,
        o.name AS "salesman.office.name",
		o.code AS "salesman.office.code"
    </sql>

    <sql id="contractJoin">
        left join sys_user b on a.salesman = b.id
        left join sys_user c on a.installer = c.id
        LEFT JOIN sys_office o ON o.id = b.office_id and o.id = c.office_id
    </sql>

    <sql id="whereCon">
        <where>
            a.del_flag = '0'
            <if test="contractBenginTime != null and contractBenginTime !=''">and a.contract_time >= #{contractBenginTime}</if>
            <if test="contractEndTime != null and contractEndTime !=''">and #{contractEndTime} >=a.contract_time </if>
            <if test="contractNo != null and contractNo != ''">and a.contractNo = #{contractNo}</if>
            <if test="salesman != null and salesman.id != null and salesman.id != ''">and b.id = #{salesman.id}</if>
            <if test="contractName != null and contractName != ''">and a.contract_name = #{contractName}</if>
            <if test="contacts != null and contacts != ''">and a.contacts = #{contacts}</if>
            <if test="salesman != null and salesman.office.code != null and salesman.office.code != ''">and o.code = #{salesman.office.code}</if>
        </where>
    </sql>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.thinkgem.jeesite.modules.purifier.entity.Contract">
        INSERT INTO purifier_contract(
        contractNo,
        contract_name,
        contract_type,
        contract_amount,
        contract_bengin_time,
        contract_end_time,
        contacts,
        contacts_phone,
        salesman,
        item,
        contacts_address,
        contract_time,
        installer,
        coll_cycle,
        create_by,
        create_date,
        remarks,
        del_flag
        )VALUES (
        #{contractNo},
        #{contractName},
         #{contractType},
        #{contractAmount},
        #{contractBenginTime},
        #{contractEndTime},
        #{contacts},
        #{contactsPhone},
        #{salesman.id},
        #{item},
        #{contactsAddress},
        #{contractTime},
        #{installer.id},
        #{collCycle},
        #{createBy.id},
        #{createDate},
        #{remarks},
        '0'
        )
    </insert>

    <update id="update">
        UPDATE purifier_contract SET
        update_by=#{updateBy.id},
        <if test="installer != null and installer.id != null and installer.id != ''">installer = #{installer.id},</if>
        <if test="mianCycle != null and mianCycle != ''">mian_cycle = #{mianCycle},</if>
        <if test="contractNo != null and contractNo != ''">contractNo = #{contractNo},</if>
        <if test="contractName != null and contractName != ''">contract_name = #{contractName},</if>
        <if test="contractType != null and contractType != ''">contract_type = #{contractType},</if>
        <if test="contractAmount != null and contractAmount != ''">contract_amount = #{contractAmount},</if>
        <if test="contractBenginTime != null and contractBenginTime != ''">contract_bengin_time = #{contractBenginTime},</if>
        <if test="contractEndTime != null and contractEndTime != ''">contract_end_time = #{contractEndTime},</if>
        <if test="contacts != null and contacts != ''">contacts = #{contacts},</if>
        <if test="contactsPhone != null and contactsPhone != ''">contacts_phone = #{contactsPhone},</if>
        <if test="item != null and item != ''">item = #{item},</if>
        <if test="contactsAddress != null and contactsAddress != ''">contacts_address = #{contactsAddress},</if>
        <if test="contractTime != null and contractTime!=''">contract_time = #{contractTime},</if>
        <if test="collCycle != null and collCycle!=''">coll_cycle = #{collCycle},</if>
        <if test="remarks != null and remarks!=''">remarks = #{remarks},</if>
        <if test="salesman != null and salesman.id != null and salesman.id != ''">salesman = #{salesman.id},</if>
        update_date=#{updateDate}
        where id = #{id}
    </update>

    <select id="get" resultType="Contract">
        SELECT
        <include refid="contractCol"/>
        FROM purifier_contract a
        <include refid="contractJoin"/>
        WHERE
        a.id = #{id}
    </select>

    <select id="findList" resultType="Contract">
        SELECT
        <include refid="contractCol"/>
        FROM purifier_contract a
        <include refid="contractJoin"/>
        <include refid="whereCon"/>
    </select>


    <select id="findNotInstallList" resultType="Contract">
        SELECT
        <include refid="contractCol"/>
        FROM purifier_contract a
        <include refid="contractJoin"/>
        where c.id is null and a.del_flag ='0'
    </select>

    <select id="findNotMainList" resultType="Contract">
        SELECT
        <include refid="contractCol"/>
        FROM purifier_contract a
        <include refid="contractJoin"/>
        where c.id is not null and a.mian_cycle is null and a.del_flag ='0'
    </select>

    <select id="findNotReceivablesList" resultType="Contract">
        SELECT
        <include refid="contractCol"/>
        FROM purifier_contract a
        <include refid="contractJoin"/>
        left join purifier_receivables d on a.id = d.contractId and d.del_flag = '0'
        where  (d.contractId is null or 7>=datediff(d.next_rec_time,now())) and a.del_flag = '0' and a.mian_cycle is not null
    </select>

    <select id="findContractNotMainList" resultType="Contract">
        SELECT
        <include refid="contractCol"/>
        FROM purifier_contract a
        <include refid="contractJoin"/>
        left join purifier_maintain d on a.id = d.contractId and d.del_flag = '0'
        where  (d.contractId is null or 7>=datediff(d.next_main_time,now()))  and a.del_flag = '0' and a.mian_cycle is not null
    </select>

    <update id="delete">
       UPDATE purifier_contract SET
       update_by = #{updateBy.id},
       del_flag = '1',
       update_date = #{updateDate}
       where id=#{id}
    </update>


    <delete id="deleteContractGoodsRel">
        DELETE FROM purifier_goods_contract_rel
        where contractId=#{id}
    </delete>

    <insert id="insterContractGoodsRel">
        INSERT INTO purifier_goods_contract_rel(contractId,goodId,appNum,usefor,remark)
        <foreach collection="goodList" item="goodRel" separator=" union all ">
            SELECT #{id},#{goodRel.good.id},#{goodRel.appNum},#{goodRel.usefor},#{goodRel.remark}
            <if test="dbName != 'mssql'">
                FROM dual
            </if>
        </foreach>
    </insert>
</mapper>